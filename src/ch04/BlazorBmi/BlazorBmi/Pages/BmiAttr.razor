@page "/bmiattr"

<h3>属性指定なし</h3>

<table class="table">
    <thead class="thead-light">
        <tr>
            <td>名前</td>
            <td>身長</td>
            <td>体重</td>
            <td>BMI</td>
        </tr>
    </thead>
    @foreach (var it in Items)
    {
        <BlazorBmi.Components.BmiChildItem Name="@it.Name" Height="@it.Height" Weight="@it.Weight" />
    }
</table>

<h3>属性指定あり</h3>

<table class="table">
    <thead class="thead-light">
        <tr>
            <td>名前</td>
            <td>身長</td>
            <td>体重</td>
            <td>BMI</td>
        </tr>
    </thead>
    @foreach (var it in Items)
    {
        var attrs = new Dictionary<string, object>()
        {
            { "Name", it.Name },
            { "Height", it.Height },
            { "Weight", it.Weight },
        };
        <BlazorBmi.Components.BmiChildItem @attributes="attrs" />
    }
</table>

@code {
    private List<BmiItem> Items { get; set; }

    /// <summary>
    /// パラメータを初期化する
    /// </summary>
    protected override void OnInitialized()
    {
        this.Items = new List<BmiItem>();
        this.Items.Add(new BmiItem() { Name = "masuda", Height = 160, Weight = 60 });
        this.Items.Add(new BmiItem() { Name = "tomoaki", Height = 150, Weight = 61 });
        this.Items.Add(new BmiItem() { Name = "kato", Height = 170, Weight = 62 });
        this.Items.Add(new BmiItem() { Name = "yamasaki", Height = 180, Weight = 63 });
    }


    // 属性スプラッティングの手法
    private Dictionary<string, object> copyrightAttrs = new Dictionary<string, object>()
{
        {"Year", 2021 },
        {"Name", "ますだともあき" }
    };
}
